#!/usr/bin/env node

const http = require('http');
const open = require('open');

const app = require('../scripts/app');
const cfg = require('../scripts/config');

const host = cfg.http.host;
const port = cfg.http.port;

var retryNo = 1;
var server = undefined;

app.set('port', port);

function tryConnect() {
  server = http.createServer(app);
  server.listen(port, host);
  server.on('error', onError);
  server.on('listening', onListening);
}
tryConnect()

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  switch (error.code) {
    case 'EACCES':
      console.error(host+':'+port+' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(host+':'+port+' is already in use');
      if (retryNo >= 3) {
        process.exit(1);
      }
      console.error('sleeping a while and retrying...');
      retryNo++;
      setTimeout(tryConnect, 5000)      
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  console.log('listening on ' + addr.address+':'+addr.port);
  open('http://localhost:'+addr.port)
}

